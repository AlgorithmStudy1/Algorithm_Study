  
**********************************************
Tier : Silver 2
Link : https://www.acmicpc.net/problem/16924

1. 배열의 처음부터 끝까지 십자가를 그려가며 visit배열에 1(방문x)를 없애줌
2. 끝까지 다 돌았음에도 visit배열에 1이 남아있다면 모든 크기의 십자가로도 커버가 안되는 곳이므로 -1을 출력
3. 2번이 아니라면 문제의 조건에 맞게 출력
**********************************************

N,M=map(int,input().split())
ary=[]
visit=[[0]*M for i in range(N)]
result=[]
check=0
for i in range(N):
    ary.append(list(input()))
for i in range(N):
    for j in range(M):
        if ary[i][j]=='*':
            visit[i][j]=1
for i in range(N):
    for j in range(M):
        if ary[i][j]=='*':
            tempX=0
            tempY=0
            tempS=0
            for k in range(1,100):
                if (i-k)>=0 and (i+k)<N and (j-k)>=0 and (j+k)<M:
                    if ary[i-k][j]=='*' and ary[i+k][j]=='*' and ary[i][j-k]=='*' and ary[i][j+k]=='*':
                        visit[i][j]=0
                        visit[i-k][j]=0
                        visit[i+k][j]=0
                        visit[i][j-k]=0
                        visit[i][j+k]=0
                        tempX=i+1
                        tempY=j+1
                        tempS=k
                    else:
                        break
                else:
                    break
            if tempS>=1:
                tempAry=[]
                tempAry.append(tempX)
                tempAry.append(tempY)
                tempAry.append(tempS)
                result.append(tempAry)
for i in range(N):
    for j in range(M):
        if visit[i][j]==1:
            check=1
            print('-1')
            break
    if check==1:
        break
if check==0:
    print(len(result))
    for i in range(len(result)):
        print(result[i][0], result[i][1], result[i][2])
